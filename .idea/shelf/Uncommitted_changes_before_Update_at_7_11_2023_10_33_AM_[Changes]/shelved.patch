Index: lib/Views/doctor/controllers/providers/Login/doctor_phone_otp_screen.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\r\nimport 'package:healthcaredoctor2050/utils/sizes/app_sizes.dart';\r\nimport 'package:healthcaredoctor2050/views/nurse/controllers/providers/login/nurse_auth_provider.dart';\r\nimport 'package:healthcaredoctor2050/views/nurse/views/screens/home/nurse_home_screen.dart';\r\nimport 'package:nb_utils/nb_utils.dart';\r\nimport 'package:provider/provider.dart';\r\nimport 'package:pinput/pinput.dart';\r\nimport 'package:timer_count_down/timer_controller.dart';\r\nimport 'package:timer_count_down/timer_count_down.dart';\r\nimport '../../../../../utils/colors/colors.dart';\r\nimport '../../../../../widgets/loader_dialog_view.dart';\r\nimport '../../../controllers/providers/login/doctor_auth_provider.dart';\r\nimport '../home/doctor_home_screen.dart';\r\n\r\nclass DoctorOTPVerificationScreen extends StatefulWidget {\r\n  final String phoneNumber;\r\n  final String userTYpe;\r\n\r\n  const DoctorOTPVerificationScreen({\r\n    Key? key,\r\n    required this.phoneNumber,\r\n    required this.userTYpe,\r\n  }) : super(key: key);\r\n\r\n  @override\r\n  State<DoctorOTPVerificationScreen> createState() => _DoctorOTPVerificationScreenState();\r\n}\r\n\r\nclass _DoctorOTPVerificationScreenState extends State<DoctorOTPVerificationScreen> {\r\n  bool connected = false;\r\n\r\n  String currentOTP = '';\r\n  String appSignature = '';\r\n  bool showResendOtpButton = false;\r\n\r\n  int secondsRemaining = 60;\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    var height = screenHeight(context);\r\n    var width = screenWidth(context);\r\n    return Scaffold(\r\n      body: ListView(\r\n        children: [\r\n          SizedBox(\r\n            height: height / 10,\r\n          ),\r\n          Image.asset(\r\n            \"assets/images/otp.gif\",\r\n            height: height / 2,\r\n            width: width,\r\n          ),\r\n          10.height,\r\n          Center(\r\n              child: Text(\r\n                  \"We have sent 6 digit OTP on ${widget.phoneNumber}.\")),\r\n          _pinView(),\r\n          30.height,\r\n          buildResendOTPView(showResendOtpButton == true\r\n              ? InkWell(\r\n            onTap: () {\r\n              setState(() {\r\n                showResendOtpButton = false;\r\n              });\r\n              resendOtp();\r\n            },\r\n            child: Text(\" Resend\",\r\n                style: TextStyle(\r\n                    color: textColor,\r\n                    fontWeight: FontWeight.w700,\r\n                    fontSize: 16,\r\n                    fontFamily: 'Ubuntu')),\r\n          )\r\n              : _showCountDownView()),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n\r\n  final pinController = TextEditingController();\r\n  final focusNode = FocusNode();\r\n\r\n  Widget _pinView() {\r\n    return Pinput(\r\n      closeKeyboardWhenCompleted: true,\r\n      length: 6,\r\n      controller: pinController,\r\n      focusNode: focusNode,\r\n      androidSmsAutofillMethod: AndroidSmsAutofillMethod.smsUserConsentApi,\r\n      listenForMultipleSmsOnAndroid: true,\r\n      validator: (value) {\r\n        return null;\r\n      },\r\n      hapticFeedbackType: HapticFeedbackType.lightImpact,\r\n      onChanged: (value) {\r\n        if (value.length == 6) {\r\n          submitOtp(value);\r\n        }\r\n      },\r\n    ).paddingSymmetric(horizontal: 20, vertical: 20);\r\n  }\r\n\r\n  Widget buildResendOTPView(Widget child) {\r\n    return Row(\r\n      mainAxisAlignment: MainAxisAlignment.center,\r\n      children: [\r\n        const Text(\"Did not receive an otp?\",\r\n            style: TextStyle(\r\n                color: Colors.red,\r\n                fontWeight: FontWeight.w200,\r\n                fontSize: 16,\r\n                fontFamily: 'Ubuntu')),\r\n        10.width,\r\n        child\r\n      ],\r\n    );\r\n  }\r\n\r\n  submitOtp(String code) async {\r\n    LoaderDialogView(context).showLoadingDialog();\r\n    var authProvider = Provider.of<NurseAuthProvider>(context, listen: false);\r\n    await authProvider\r\n        .otpVerification(context,\r\n        otp: code, mobileNo: widget.phoneNumber, userType: widget.userTYpe);\r\n    if(!mounted) return;\r\n    LoaderDialogView(context).dismissLoadingDialog();\r\n    if (authProvider.otpStatus == true) {\r\n      Navigator.pushReplacement(context,\r\n          MaterialPageRoute(builder: (context) => const DoctorHomeScreen()));\r\n    } else {\r\n      // showToast_Failure_Message(context, \"OTP is not matched !!!\");\r\n      Fluttertoast.showToast(msg: \"OTP is not matched !!!\");\r\n    }\r\n  }\r\n\r\n  _showCountDownView() {\r\n    return Countdown(\r\n      controller: CountdownController(autoStart: true),\r\n      seconds: 60,\r\n      build: (BuildContext context, double time) => Text(\r\n        \"$time s\",\r\n        style: TextStyle(color: textColor, fontWeight: FontWeight.bold),\r\n      ),\r\n      onFinished: () {\r\n        setState(() {\r\n          showResendOtpButton = true;\r\n        });\r\n      },\r\n    );\r\n  }\r\n\r\n  resendOtp() async {\r\n    var authProvider = Provider.of<DoctorAuthProvider>(context, listen: false);\r\n    await authProvider.mobileNumberVerification(\r\n        phoneNo: widget.phoneNumber.toString(), userType: widget.userTYpe);\r\n    if (authProvider.mobileStatus == true) {\r\n      Fluttertoast.showToast(msg: \"OTP Resent\");\r\n    } else {\r\n      Fluttertoast.showToast(msg:\"Mobile Insert failed\");\r\n    }\r\n  }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/Views/doctor/controllers/providers/Login/doctor_phone_otp_screen.dart b/lib/Views/doctor/controllers/providers/Login/doctor_phone_otp_screen.dart
--- a/lib/Views/doctor/controllers/providers/Login/doctor_phone_otp_screen.dart	(revision 4987e93d638afc28464991caae4d0868dc3f8e08)
+++ b/lib/Views/doctor/controllers/providers/Login/doctor_phone_otp_screen.dart	(date 1689051115553)
@@ -1,162 +1,0 @@
-import 'package:flutter/material.dart';
-import 'package:healthcaredoctor2050/utils/sizes/app_sizes.dart';
-import 'package:healthcaredoctor2050/views/nurse/controllers/providers/login/nurse_auth_provider.dart';
-import 'package:healthcaredoctor2050/views/nurse/views/screens/home/nurse_home_screen.dart';
-import 'package:nb_utils/nb_utils.dart';
-import 'package:provider/provider.dart';
-import 'package:pinput/pinput.dart';
-import 'package:timer_count_down/timer_controller.dart';
-import 'package:timer_count_down/timer_count_down.dart';
-import '../../../../../utils/colors/colors.dart';
-import '../../../../../widgets/loader_dialog_view.dart';
-import '../../../controllers/providers/login/doctor_auth_provider.dart';
-import '../home/doctor_home_screen.dart';
-
-class DoctorOTPVerificationScreen extends StatefulWidget {
-  final String phoneNumber;
-  final String userTYpe;
-
-  const DoctorOTPVerificationScreen({
-    Key? key,
-    required this.phoneNumber,
-    required this.userTYpe,
-  }) : super(key: key);
-
-  @override
-  State<DoctorOTPVerificationScreen> createState() => _DoctorOTPVerificationScreenState();
-}
-
-class _DoctorOTPVerificationScreenState extends State<DoctorOTPVerificationScreen> {
-  bool connected = false;
-
-  String currentOTP = '';
-  String appSignature = '';
-  bool showResendOtpButton = false;
-
-  int secondsRemaining = 60;
-
-  @override
-  Widget build(BuildContext context) {
-    var height = screenHeight(context);
-    var width = screenWidth(context);
-    return Scaffold(
-      body: ListView(
-        children: [
-          SizedBox(
-            height: height / 10,
-          ),
-          Image.asset(
-            "assets/images/otp.gif",
-            height: height / 2,
-            width: width,
-          ),
-          10.height,
-          Center(
-              child: Text(
-                  "We have sent 6 digit OTP on ${widget.phoneNumber}.")),
-          _pinView(),
-          30.height,
-          buildResendOTPView(showResendOtpButton == true
-              ? InkWell(
-            onTap: () {
-              setState(() {
-                showResendOtpButton = false;
-              });
-              resendOtp();
-            },
-            child: Text(" Resend",
-                style: TextStyle(
-                    color: textColor,
-                    fontWeight: FontWeight.w700,
-                    fontSize: 16,
-                    fontFamily: 'Ubuntu')),
-          )
-              : _showCountDownView()),
-        ],
-      ),
-    );
-  }
-
-  final pinController = TextEditingController();
-  final focusNode = FocusNode();
-
-  Widget _pinView() {
-    return Pinput(
-      closeKeyboardWhenCompleted: true,
-      length: 6,
-      controller: pinController,
-      focusNode: focusNode,
-      androidSmsAutofillMethod: AndroidSmsAutofillMethod.smsUserConsentApi,
-      listenForMultipleSmsOnAndroid: true,
-      validator: (value) {
-        return null;
-      },
-      hapticFeedbackType: HapticFeedbackType.lightImpact,
-      onChanged: (value) {
-        if (value.length == 6) {
-          submitOtp(value);
-        }
-      },
-    ).paddingSymmetric(horizontal: 20, vertical: 20);
-  }
-
-  Widget buildResendOTPView(Widget child) {
-    return Row(
-      mainAxisAlignment: MainAxisAlignment.center,
-      children: [
-        const Text("Did not receive an otp?",
-            style: TextStyle(
-                color: Colors.red,
-                fontWeight: FontWeight.w200,
-                fontSize: 16,
-                fontFamily: 'Ubuntu')),
-        10.width,
-        child
-      ],
-    );
-  }
-
-  submitOtp(String code) async {
-    LoaderDialogView(context).showLoadingDialog();
-    var authProvider = Provider.of<NurseAuthProvider>(context, listen: false);
-    await authProvider
-        .otpVerification(context,
-        otp: code, mobileNo: widget.phoneNumber, userType: widget.userTYpe);
-    if(!mounted) return;
-    LoaderDialogView(context).dismissLoadingDialog();
-    if (authProvider.otpStatus == true) {
-      Navigator.pushReplacement(context,
-          MaterialPageRoute(builder: (context) => const DoctorHomeScreen()));
-    } else {
-      // showToast_Failure_Message(context, "OTP is not matched !!!");
-      Fluttertoast.showToast(msg: "OTP is not matched !!!");
-    }
-  }
-
-  _showCountDownView() {
-    return Countdown(
-      controller: CountdownController(autoStart: true),
-      seconds: 60,
-      build: (BuildContext context, double time) => Text(
-        "$time s",
-        style: TextStyle(color: textColor, fontWeight: FontWeight.bold),
-      ),
-      onFinished: () {
-        setState(() {
-          showResendOtpButton = true;
-        });
-      },
-    );
-  }
-
-  resendOtp() async {
-    var authProvider = Provider.of<DoctorAuthProvider>(context, listen: false);
-    await authProvider.mobileNumberVerification(
-        phoneNo: widget.phoneNumber.toString(), userType: widget.userTYpe);
-    if (authProvider.mobileStatus == true) {
-      Fluttertoast.showToast(msg: "OTP Resent");
-    } else {
-      Fluttertoast.showToast(msg:"Mobile Insert failed");
-    }
-  }
-}
\ No newline at end of file
